//Server login:
// ssh v1eahlqv@ssh1.maths.ed.ac.uk
// ssh v1eahlqv@ssh3.maths.ed.ac.uk

// ssh compute64d.maths.ed.ac.uk


// [p]-extensions:


// s^4 - 2*s^3 - 25*s^2 + 26*s + 1534,          cyc: [4, 4, 2]          {a^2(a,b)(b,c)}
// s^4 - 2*s^3 - 59*s^2 + 60*s + 2265,          cyc: [4, 4, 2]          {a^2(a,b)(b,c)}
// s^4 - 2*s^3 - 125*s^2 + 126*s + 5334,        cyc: [4, 4, 2]          {a^2(a,b)(b,c)}
// s^4 - 2*s^3 - 173*s^2 + 174*s + 8934,        cyc: [4, 4, 2]          {a^2(a,b)(a,c)}

// s^4 - 2*s^3 + 17*s^2 - 16*s + 1429,          cyc: [4, 4, 2]          {(a,c)b^2(b,c)}
// s^4 - 2*s^3 - 385*s^2 + 386*s + 38614,       cyc: [4, 4, 2]          {(a,c)b^2(b,c)}

// s^4 - 2*s^3 + 85*s^2 - 84*s + 3129,          cyc: [4, 4, 2]          {(a,c)(b,c)c^2}

//----------------------------------------------------------------------------------------------------------------
// s^4 - 2*s^3 + 545*s^2 - 544*s + 75349,       cyc: [4, 4, 4]          {(a,b)(a,c)(b,c)}
//----------------------------------------------------------------------------------------------------------------
// s^4 - 2*s^3 - 49*s^2 + 50*s + 1990,          cyc: [8, 4, 2]          {a^2(b,c)}
// s^4 - 2*s^3 + 121*s^2 - 120*s + 4965,        cyc: [8, 4, 2]          {(a,c)b^2(b,c)}
//----------------------------------------------------------------------------------------------------------------
// s^4 - 2*s^3 + 223*s^2 - 222*s + 13686,       cyc: [20, 4, 2]         {a^2(a,b)(a,c)}
//----------------------------------------------------------------------------------------------------------------
// s^4 + 683*s^2 + 116281,                      cyc: [4, 2, 2, 2]       {(a,c)(a,d), (b,c)(b,d), (a,b)c^2, a^2(a,c)(b,c)(c,d), (a,b)d^2}
// s^4 + 455*s^2 + 207025,                      cyc: [4, 2, 2, 2]       {a^2(b,c), a^2(b,d), (a,b)(a,c)(a,d)c^2, (a,c)(a,d)(c,d), (a,b)(a,c)(a,d)d^2}
//----------------------------------------------------------------------------------------------------------------
// s^4 - 2*s^3 + 11*s^2 - 10*s + 1390,          cyc: [4, 4, 2, 2]       {(a,c)(a,d)b^2, (b,c), (a,b)(b,d), (a,c)c^2, (c,d)}
// s^4 - 2*s^3 + 205*s^2 - 204*s + 11769,       cyc: [4, 4, 2, 2]       {(a,b)(a,c)(a,d)(b,c), (b,d), (a,c)c^2, (a,d)(c,d), (a,d)d^2}
//----------------------------------------------------------------------------------------------------------------

F_4<g1,g2,g3,g4> := FreeGroup(4);          
Q, fQ := pQuotient(F_4, 2, 2 : Print := 1);
a := Q.1;
b := Q.2;
c := Q.3;
d := Q.4;



cup_1 := {(a,c)*(a,d), (b,c)*(b,d), (a,b)*c^2, a^2*(a,c)*(b,c)*(c,d), (a,b)*d^2};
cup_2 := {a^2*(b,c), a^2*(b,d), (a,b)*(a,c)*(a,d)*c^2, (a,c)*(a,d)*(c,d), (a,b)*(a,c)*(a,d)*d^2};
cup_3 := {(a,c)*(a,d)*b^2, (b,c), (a,b)*(b,d), (a,c)*c^2, (c,d)};
cup_4 := {(a,b)*(a,c)*(a,d)*(b,c), (b,d), (a,c)*c^2, (a,d)*(c,d), (a,d)*d^2};

Q1 := quo< Q | cup_1 >;
Q2 := quo< Q | cup_2 >;
Q3 := quo< Q | cup_3 >;
Q4 := quo< Q | cup_4 >;

Q_2_index_2 := [Q1, Q2, Q3, Q4];

for g in Q_2_index_2 do 
    #g;
end for;

// [p,p]-extensions

// s^8 + 74*s^6 + 1429*s^4 + 7680*s^2 + 900,                                                    cyc: [4, 4, 2, 2]
// s^8 - 66*s^6 + 1499*s^4 - 8070*s^2 + 42025,                                                  cyc: [4, 4, 2, 2]
// s^8 - 2*s^7 - 145*s^6 + 228*s^5 + 8648*s^4 - 8022*s^3 - 247957*s^2 + 83476*s + 2905009,      cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 - 180*s^6 + 554*s^5 + 13193*s^4 - 27314*s^3 - 462008*s^2 + 475758*s + 6504709,   cyc: [4, 4, 2, 2]
//----------------------------------------------------------------------------------------------------------------
// s^8 + 66*s^6 + 1037*s^4 + 3744*s^2 + 676,                                                    cyc: [8, 4, 2, 2]
// s^8 - 2*s^7 + 259*s^6 - 392*s^5 + 25428*s^4 - 24574*s^3 + 1116631*s^2 - 488296*s + 18696421, cyc: [8, 4, 2, 2]
//----------------------------------------------------------------------------------------------------------------
// s^8 - 70*s^6 + 1717*s^4 - 11760*s^2 + 60516,                                                 cyc: [20, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------


// s^8 - 30*s^6 + 407*s^4 + 2730*s^2 + 8281,                                                    cyc: [4, 4, 2, 2]
// s^8 - 26*s^6 + 577*s^4 + 156*s^2 + 41616,                                                    cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 - 180*s^6 + 554*s^5 + 13193*s^4 - 27314*s^3 - 462008*s^2 + 475758*s + 6504709,   cyc: [4, 4, 2, 2]
//----------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 + 49*s^6 - 2*s^5 + 2043*s^4 - 1774*s^3 + 5446*s^2 + 3404*s + 5476,               cyc: [8, 4, 2, 2]
//----------------------------------------------------------------------------------------------------------------
// s^8 + 6*s^6 + 587*s^4 + 7194*s^2 + 83521,                                                    cyc: [16, 4, 2, 2]
//----------------------------------------------------------------------------------------------------------------
// s^8 + 46*s^6 + 1369*s^4 + 24780*s^2 + 176400,                                                cyc: [80, 4, 2, 2]
//----------------------------------------------------------------------------------------------------------------
// s^8 - 26*s^6 + 379*s^4 + 2730*s^2 + 11025,                                                   cyc: [4, 4, 2, 2, 2]
//--------------------------------------------------------------------------------------------------------------------


// s^8 - 2*s^7 - 145*s^6 + 228*s^5 + 8648*s^4 - 8022*s^3 - 247957*s^2 + 83476*s + 2905009,          cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 - 260*s^6 + 794*s^5 + 26553*s^4 - 54434*s^3 - 1258928*s^2 + 1286278*s + 23333389,    cyc: [4, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 - 359*s^6 + 544*s^5 + 49053*s^4 - 48592*s^3 - 3022196*s^2 + 1423424*s + 70902196,    cyc: [8, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 6*s^6 + 587*s^4 + 7194*s^2 + 83521,                                                        cyc: [16, 4, 2, 2]
// s^8 + 26*s^6 + 877*s^4 + 14664*s^2 + 125316,                                                     cyc: [16, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 74*s^6 + 2797*s^4 + 58296*s^2 + 509796,                                                    cyc: [20, 4, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 66*s^6 + 2357*s^4 + 47304*s^2 + 401956,                                                    cyc: [8, 8, 2, 2, 2]
//--------------------------------------------------------------------------------------------------------------------


// s^8 - 26*s^6 + 577*s^4 + 156*s^2 + 41616,                                                        cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 + 88*s^6 - 250*s^5 + 3261*s^4 - 6110*s^3 + 50842*s^2 - 47828*s + 442516,             cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 - 260*s^6 + 794*s^5 + 26553*s^4 - 54434*s^3 - 1258928*s^2 + 1286278*s + 23333389,    cyc: [4, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 54*s^6 + 617*s^4 + 2436*s^2 + 3136,                                                        cyc: [4, 4, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 66*s^6 + 1037*s^4 + 3744*s^2 + 676,                                                        cyc: [8, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 14*s^6 + 277*s^4 + 3864*s^2 + 12996,                                                       cyc: [16, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 98*s^6 + 3313*s^4 - 39228*s^2 + 207936,                                                    cyc: [20, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------


// s^8 - 30*s^6 + 407*s^4 + 2730*s^2 + 8281,                                                cyc: [4, 4, 2, 2]
// s^8 + 74*s^6 + 1429*s^4 + 7680*s^2 + 900,                                                cyc: [4, 4, 2, 2]
// s^8 - 2*s^7 - 41*s^6 - 2*s^5 + 1908*s^4 - 1864*s^3 + 631*s^2 - 1276*s + 841,             cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 - 84*s^6 + 266*s^5 + 3497*s^4 - 7442*s^3 - 75944*s^2 + 79710*s + 757429,     cyc: [4, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 54*s^6 + 617*s^4 + 2436*s^2 + 3136,                                                cyc: [4, 4, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 26*s^6 + 877*s^4 + 14664*s^2 + 125316,                                             cyc: [16, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 34*s^6 + 529*s^4 + 1380*s^2 + 14400,                                               cyc: [40, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------


// s^8 - 2*s^7 - 15*s^6 - 18*s^5 + 262*s^4 + 108*s^3 + 342*s^2 + 5402*s + 19009,                cyc: [8, 4, 2]
// s^8 - 2*s^7 - 15*s^6 - 18*s^5 + 262*s^4 + 108*s^3 + 342*s^2 + 5402*s + 19009,                cyc: [8, 4, 2]
// s^8 - 2*s^7 + 15*s^6 + 54*s^5 + 7*s^4 + 450*s^3 + 2703*s^2 - 15496*s + 49309,                cyc: [8, 4, 4]
// s^8 - 2*s^7 + 15*s^6 + 54*s^5 + 7*s^4 + 450*s^3 + 2703*s^2 - 15496*s + 49309,                cyc: [8, 4, 4]
// s^8 - 2*s^7 - 21*s^6 + 134*s^5 - 165*s^4 - 1058*s^3 + 6415*s^2 - 31584*s + 94929,            cyc: [8, 4, 2]
// s^8 - 2*s^7 - 21*s^6 + 134*s^5 - 165*s^4 - 1058*s^3 + 6415*s^2 - 31584*s + 94929,            cyc: [8, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 + 69*s^6 + 350*s^5 - 6330*s^4 + 21280*s^3 - 195266*s^2 - 1572762*s + 14161281,   cyc: [8, 4, 4]
// s^8 - 2*s^7 + 69*s^6 + 350*s^5 - 6330*s^4 + 21280*s^3 - 195266*s^2 - 1572762*s + 14161281,   cyc: [8, 4, 4]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 66*s^6 + 1499*s^4 - 8070*s^2 + 42025,                                                  cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 - 84*s^6 + 266*s^5 + 3497*s^4 - 7442*s^3 - 75944*s^2 + 79710*s + 757429,         cyc: [4, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 - 131*s^6 + 208*s^5 + 6993*s^4 - 6364*s^3 - 174884*s^2 + 51224*s + 1852036,      cyc: [8, 4, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 14*s^6 + 277*s^4 + 3864*s^2 + 12996,                                                   cyc: [16, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 10*s^6 + 397*s^4 + 7320*s^2 + 34596,                                                   cyc: [40, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 26*s^6 + 379*s^4 + 2730*s^2 + 11025,                                                   cyc: [4, 4, 2, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 66*s^6 + 2357*s^4 + 47304*s^2 + 401956,                                                cyc: [8, 8, 2, 2, 2]
//--------------------------------------------------------------------------------------------------------------------






// s^8 - 2*s^7 + 97*s^6 - 134*s^5 + 2550*s^4 - 2032*s^3 + 11710*s^2 + 4238*s + 23101,               cyc: [8, 4, 2]
// s^8 - 2*s^7 + 97*s^6 - 134*s^5 + 2550*s^4 - 2032*s^3 + 11710*s^2 + 4238*s + 23101,               cyc: [8, 4, 2]
// s^8 - 2*s^7 - 113*s^6 + 154*s^5 + 4035*s^4 - 3106*s^3 - 45317*s^2 + 140*s + 219709,              cyc: [8, 4, 2]
// s^8 - 2*s^7 - 113*s^6 + 154*s^5 + 4035*s^4 - 3106*s^3 - 45317*s^2 + 140*s + 219709,              cyc: [8, 4, 2]
// s^8 - 2*s^7 + 139*s^6 - 230*s^5 + 6351*s^4 - 7846*s^3 + 106843*s^2 - 90748*s + 648361,           cyc: [8, 4, 2]
// s^8 - 2*s^7 + 139*s^6 - 230*s^5 + 6351*s^4 - 7846*s^3 + 106843*s^2 - 90748*s + 648361,           cyc: [8, 4, 2]
// s^8 - 2*s^7 - 485*s^6 + 832*s^5 + 90660*s^4 - 117400*s^3 - 7782032*s^2 + 5671886*s + 260340781,  cyc: [8, 4, 2]
// s^8 - 2*s^7 - 485*s^6 + 832*s^5 + 90660*s^4 - 117400*s^3 - 7782032*s^2 + 5671886*s + 260340781,  cyc: [8, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 - 41*s^6 - 2*s^5 + 1908*s^4 - 1864*s^3 + 631*s^2 - 1276*s + 841,                     cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 + 88*s^6 - 250*s^5 + 3261*s^4 - 6110*s^3 + 50842*s^2 - 47828*s + 442516,             cyc: [4, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 + 49*s^6 - 2*s^5 + 2043*s^4 - 1774*s^3 + 5446*s^2 + 3404*s + 5476,                   cyc: [8, 4, 2, 2]
// s^8 - 2*s^7 + 259*s^6 - 392*s^5 + 25428*s^4 - 24574*s^3 + 1116631*s^2 - 488296*s + 18696421,     cyc: [8, 4, 2, 2]
// s^8 - 2*s^7 - 359*s^6 + 544*s^5 + 49053*s^4 - 48592*s^3 - 3022196*s^2 + 1423424*s + 70902196,    cyc: [8, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 - 131*s^6 + 208*s^5 + 6993*s^4 - 6364*s^3 - 174884*s^2 + 51224*s + 1852036,          cyc: [8, 4, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 227*s^6 + 38533*s^4 + 2950092*s^2 + 168896016,                                             cyc: [20, 2, 2, 2, 2]







// s^8 - 70*s^6 + 1717*s^4 - 11760*s^2 + 60516,                                 cyc: [20, 4, 2, 2]
// s^8 - 98*s^6 + 3313*s^4 - 39228*s^2 + 207936,                                cyc: [20, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 74*s^6 + 2797*s^4 + 58296*s^2 + 509796,                                cyc: [20, 4, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 34*s^6 + 529*s^4 + 1380*s^2 + 14400,                                   cyc: [40, 4, 2, 2]
// s^8 + 10*s^6 + 397*s^4 + 7320*s^2 + 34596,                                   cyc: [40, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 46*s^6 + 1369*s^4 + 24780*s^2 + 176400,                                cyc: [80, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 227*s^6 + 38533*s^4 + 2950092*s^2 + 168896016,                         cyc: [20, 2, 2, 2, 2]


// s^8 - 10*s^6 - 517*s^4 + 2710*s^2 + 160801,                                                      cyc: [4, 4, 2]
// s^8 - 10*s^6 - 517*s^4 + 2710*s^2 + 160801,                                                      cyc: [4, 4, 2]
// s^8 - 22*s^6 + 2699*s^4 - 28358*s^2 + 3845521,                                                   cyc: [4, 4, 2]
// s^8 - 22*s^6 + 2699*s^4 - 28358*s^2 + 3845521,                                                   cyc: [4, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 70*s^6 + 1187*s^4 + 1330*s^2 + 22201,                                                      cyc: [4, 2, 2, 2]
// s^8 - 70*s^6 + 1187*s^4 + 1330*s^2 + 22201,                                                      cyc: [4, 2, 2, 2]
// s^8 - 154*s^6 + 9011*s^4 - 237314*s^2 + 2920681,                                                 cyc: [4, 2, 2, 2]
// s^8 - 154*s^6 + 9011*s^4 - 237314*s^2 + 2920681,                                                 cyc: [4, 2, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 4*s^7 - 68*s^6 + 218*s^5 + 2553*s^4 - 5474*s^3 - 50576*s^2 + 53350*s + 493165,             cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 - 84*s^6 + 266*s^5 + 3497*s^4 - 7442*s^3 - 75944*s^2 + 79710*s + 757429,             cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 - 180*s^6 + 554*s^5 + 13193*s^4 - 27314*s^3 - 462008*s^2 + 475758*s + 6504709,       cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 - 260*s^6 + 794*s^5 + 26553*s^4 - 54434*s^3 - 1258928*s^2 + 1286278*s + 23333389,    cyc: [4, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 4*s^7 - 36*s^6 + 122*s^5 + 1241*s^4 - 2690*s^3 - 19424*s^2 + 20790*s + 213565,             cyc: [4, 4, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 4*s^7 + 4*s^6 + 2*s^5 + 681*s^4 - 1370*s^3 - 1364*s^2 + 2050*s + 116965,                   cyc: [8, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 227*s^6 + 38533*s^4 + 2950092*s^2 + 168896016,                                             cyc: [20, 2, 2, 2, 2]
//--------------------------------------------------------------------------------------------------------------------


// s^8 + 66*s^6 + 1037*s^4 + 3744*s^2 + 676,                                                cyc: [8, 4, 2, 2]
// s^8 - 4*s^7 + 4*s^6 + 2*s^5 + 681*s^4 - 1370*s^3 - 1364*s^2 + 2050*s + 116965,           cyc: [8, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 - 131*s^6 + 208*s^5 + 6993*s^4 - 6364*s^3 - 174884*s^2 + 51224*s + 1852036,  cyc: [8, 4, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 - 21*s^6 + 70*s^5 + 1544*s^4 - 8824*s^3 + 17155*s^2 - 13836*s + 8269,        cyc: [8, 8, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 6*s^6 + 587*s^4 + 7194*s^2 + 83521,                                                cyc: [16, 4, 2, 2]
// s^8 - 2*s^7 - 15*s^6 + 178*s^5 + 1361*s^4 - 1390*s^3 + 3079*s^2 + 7614*s + 3574,         cyc: [16, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 34*s^6 + 529*s^4 + 1380*s^2 + 14400,                                               cyc: [40, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------



// s^8 - 30*s^6 + 407*s^4 + 2730*s^2 + 8281,                                                cyc: [4, 4, 2, 2]
// s^8 - 66*s^6 + 1499*s^4 - 8070*s^2 + 42025,                                              cyc: [4, 4, 2, 2]
// s^8 - 2*s^7 + 23*s^6 + 186*s^5 + 1208*s^4 - 372*s^3 + 5951*s^2 - 1820*s + 6685,          cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 - 68*s^6 + 218*s^5 + 2553*s^4 - 5474*s^3 - 50576*s^2 + 53350*s + 493165,     cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 + 88*s^6 - 250*s^5 + 3261*s^4 - 6110*s^3 + 50842*s^2 - 47828*s + 442516,     cyc: [4, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 - 21*s^6 + 70*s^5 + 1544*s^4 - 8824*s^3 + 17155*s^2 - 13836*s + 8269,        cyc: [8, 8, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 74*s^6 + 2797*s^4 + 58296*s^2 + 509796,                                            cyc: [20, 4, 4, 2]
//--------------------------------------------------------------------------------------------------------------------



// s^8 - 4*s^7 + 12*s^6 - 22*s^5 + 168*s^4 - 304*s^3 + 569*s^2 - 420*s + 10360,             cyc: [8, 4, 2]
// s^8 - 4*s^7 + 12*s^6 - 22*s^5 + 168*s^4 - 304*s^3 + 569*s^2 - 420*s + 10360,             cyc: [8, 4, 2]
// s^8 - 4*s^7 - 28*s^6 + 98*s^5 + 342*s^4 - 852*s^3 - 2175*s^2 + 2618*s + 7294,            cyc: [8, 4, 2]
// s^8 - 4*s^7 - 28*s^6 + 98*s^5 + 342*s^4 - 852*s^3 - 2175*s^2 + 2618*s + 7294,            cyc: [8, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 4*s^7 + 84*s^6 - 238*s^5 + 1746*s^4 - 3100*s^3 + 1121*s^2 + 390*s + 34150,         cyc: [8, 4, 4]
// s^8 - 4*s^7 + 84*s^6 - 238*s^5 + 1746*s^4 - 3100*s^3 + 1121*s^2 + 390*s + 34150,         cyc: [8, 4, 4]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 + 23*s^6 + 186*s^5 + 1208*s^4 - 372*s^3 + 5951*s^2 - 1820*s + 6685,          cyc: [4, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 54*s^6 + 617*s^4 + 2436*s^2 + 3136,                                                cyc: [4, 4, 4, 2]
// s^8 - 4*s^7 - 36*s^6 + 122*s^5 + 1241*s^4 - 2690*s^3 - 19424*s^2 + 20790*s + 213565,     cyc: [4, 4, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 + 49*s^6 - 2*s^5 + 2043*s^4 - 1774*s^3 + 5446*s^2 + 3404*s + 5476,           cyc: [8, 4, 2, 2]
// s^8 - 4*s^7 - 4*s^6 + 26*s^5 - 636*s^4 + 1224*s^3 + 2553*s^2 - 3160*s + 236356,          cyc: [8, 4, 2, 2]
// s^8 - 4*s^7 - 4*s^6 + 26*s^5 - 636*s^4 + 1224*s^3 + 2553*s^2 - 3160*s + 236356,          cyc: [8, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 - 15*s^6 + 178*s^5 + 1361*s^4 - 1390*s^3 + 3079*s^2 + 7614*s + 3574,         cyc: [16, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 70*s^6 + 1717*s^4 - 11760*s^2 + 60516,                                             cyc: [20, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 66*s^6 + 2357*s^4 + 47304*s^2 + 401956,                                            cyc: [8, 8, 2, 2, 2]
//--------------------------------------------------------------------------------------------------------------------




// s^8 - 26*s^6 + 577*s^4 + 156*s^2 + 41616,                                                cyc: [4, 4, 2, 2]
// s^8 - 2*s^7 - 41*s^6 - 2*s^5 + 1908*s^4 - 1864*s^3 + 631*s^2 - 1276*s + 841,             cyc: [4, 4, 2, 2]
// s^8 - 2*s^7 + 23*s^6 + 186*s^5 + 1208*s^4 - 372*s^3 + 5951*s^2 - 1820*s + 6685,          cyc: [4, 4, 2, 2]
// s^8 - 2*s^7 - 145*s^6 + 228*s^5 + 8648*s^4 - 8022*s^3 - 247957*s^2 + 83476*s + 2905009,  cyc: [4, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 4*s^7 + 4*s^6 + 2*s^5 + 681*s^4 - 1370*s^3 - 1364*s^2 + 2050*s + 116965,           cyc: [8, 4, 2, 2]
// s^8 - 2*s^7 + 35*s^6 - 272*s^5 + 2936*s^4 - 5090*s^3 + 29179*s^2 - 124236*s + 273849,    cyc: [8, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 10*s^6 + 397*s^4 + 7320*s^2 + 34596,                                               cyc: [40, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------


// s^8 - 4*s^7 - 36*s^6 + 122*s^5 + 1241*s^4 - 2690*s^3 - 19424*s^2 + 20790*s + 213565,             cyc: [4, 4, 4, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 + 35*s^6 - 272*s^5 + 2936*s^4 - 5090*s^3 + 29179*s^2 - 124236*s + 273849,            cyc: [8, 4, 2, 2]
// s^8 - 2*s^7 + 259*s^6 - 392*s^5 + 25428*s^4 - 24574*s^3 + 1116631*s^2 - 488296*s + 18696421,     cyc: [8, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 - 21*s^6 + 70*s^5 + 1544*s^4 - 8824*s^3 + 17155*s^2 - 13836*s + 8269,                cyc: [8, 8, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 14*s^6 + 277*s^4 + 3864*s^2 + 12996,                                                       cyc: [16, 4, 2, 2]
// s^8 + 26*s^6 + 877*s^4 + 14664*s^2 + 125316,                                                     cyc: [16, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 + 46*s^6 + 1369*s^4 + 24780*s^2 + 176400,                                                    cyc: [80, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------



// s^8 + 74*s^6 + 1429*s^4 + 7680*s^2 + 900,                                                            cyc: [4, 4, 2, 2]
// s^8 - 4*s^7 - 68*s^6 + 218*s^5 + 2553*s^4 - 5474*s^3 - 50576*s^2 + 53350*s + 493165,                 cyc: [4, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 - 359*s^6 + 544*s^5 + 49053*s^4 - 48592*s^3 - 3022196*s^2 + 1423424*s + 70902196,        cyc: [8, 4, 2, 2]
// s^8 - 2*s^7 + 35*s^6 - 272*s^5 + 2936*s^4 - 5090*s^3 + 29179*s^2 - 124236*s + 273849,                cyc: [8, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 2*s^7 - 15*s^6 + 178*s^5 + 1361*s^4 - 1390*s^3 + 3079*s^2 + 7614*s + 3574,                     cyc: [16, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 98*s^6 + 3313*s^4 - 39228*s^2 + 207936,                                                        cyc: [20, 4, 2, 2]
//--------------------------------------------------------------------------------------------------------------------
// s^8 - 26*s^6 + 379*s^4 + 2730*s^2 + 11025,                                                           cyc: [4, 4, 2, 2, 2]
//--------------------------------------------------------------------------------------------------------------------





// [p,p]-extensions ordered by cyc and iso class

F_3<g1,g2,g3> := FreeGroup(3);          
Q, fQ := pQuotient(F_3, 2, 2 : Print := 1);
a := Q.1;
b := Q.2;
c := Q.3;

/* s^8 - 10*s^6 - 517*s^4 + 2710*s^2 + 160801,                                                      cyc: [4, 4, 2]                  */rels_1 := {(a,b)*(b,c)*c^2};
/* s^8 - 22*s^6 + 2699*s^4 - 28358*s^2 + 3845521,                                                   cyc: [4, 4, 2]                  */rels_2 := {(a,c)*b^2};
/*--------------------------------------------------------------------------------------------------------------------                  
/* s^8 - 4*s^7 + 12*s^6 - 22*s^5 + 168*s^4 - 304*s^3 + 569*s^2 - 420*s + 10360,                     cyc: [8, 4, 2]                  */rels_3 := {(a,c)*b^2};
/* s^8 - 4*s^7 - 28*s^6 + 98*s^5 + 342*s^4 - 852*s^3 - 2175*s^2 + 2618*s + 7294,                    cyc: [8, 4, 2]                  */rels_4 := {(a,c)*b^2*(b,c)};    
/* s^8 - 2*s^7 - 15*s^6 - 18*s^5 + 262*s^4 + 108*s^3 + 342*s^2 + 5402*s + 19009,                    cyc: [8, 4, 2]                  */rels_5 := {(a,b)*b^2};
/* s^8 - 2*s^7 + 15*s^6 + 54*s^5 + 7*s^4 + 450*s^3 + 2703*s^2 - 15496*s + 49309,                    cyc: [8, 4, 4]                  */rels_6 := {(a,b)*(a,c)};
/* s^8 - 2*s^7 - 21*s^6 + 134*s^5 - 165*s^4 - 1058*s^3 + 6415*s^2 - 31584*s + 94929,                cyc: [8, 4, 2]                  */rels_7 := {(a,c)*c^2};
/* s^8 - 2*s^7 + 97*s^6 - 134*s^5 + 2550*s^4 - 2032*s^3 + 11710*s^2 + 4238*s + 23101,               cyc: [8, 4, 2]                  */rels_8 := {(a,c)*b^2*(b,c)};
/* s^8 - 2*s^7 - 113*s^6 + 154*s^5 + 4035*s^4 - 3106*s^3 - 45317*s^2 + 140*s + 219709,              cyc: [8, 4, 2]                  */rels_9 := {(a,b)*(a,c)*b^2};
/* s^8 - 2*s^7 + 139*s^6 - 230*s^5 + 6351*s^4 - 7846*s^3 + 106843*s^2 - 90748*s + 648361,           cyc: [8, 4, 2]                  */rels_10 := {(a,b)*(a,c)*b^2};
/* s^8 - 2*s^7 - 485*s^6 + 832*s^5 + 90660*s^4 - 117400*s^3 - 7782032*s^2 + 5671886*s + 260340781,  cyc: [8, 4, 2]                  */rels_11 := {(a,b)*(a,c)*c^2};
//--------------------------------------------------------------------------------------------------------------------  
/* s^8 - 4*s^7 + 84*s^6 - 238*s^5 + 1746*s^4 - 3100*s^3 + 1121*s^2 + 390*s + 34150,                 cyc: [8, 4, 4]                  */rels_12 := {(a,c)*(b,c)};
/* s^8 - 2*s^7 + 69*s^6 + 350*s^5 - 6330*s^4 + 21280*s^3 - 195266*s^2 - 1572762*s + 14161281,       cyc: [8, 4, 4]                  */rels_13 := {(a,b)};
//-------------------------------------------------------------------------------------------------------------------- 
Q_2_1 := quo< Q | rels_1 >;
Q_2_2 := quo< Q | rels_2 >;
Q_2_3 := quo< Q | rels_3 >;
Q_2_4 := quo< Q | rels_4 >;
Q_2_5 := quo< Q | rels_5 >;
Q_2_6 := quo< Q | rels_6 >;
Q_2_7 := quo< Q | rels_7 >;
Q_2_8 := quo< Q | rels_8 >;
Q_2_9 := quo< Q | rels_9 >;
Q_2_10 := quo< Q | rels_10 >;
Q_2_11 := quo< Q | rels_11 >;
Q_2_12 := quo< Q | rels_12 >;
Q_2_13 := quo< Q | rels_13 >;



F_4<g1,g2,g3,g4> := FreeGroup(4);          
Q, fQ := pQuotient(F_4, 2, 2 : Print := 1);
a := Q.1;
b := Q.2;
c := Q.3;
d := Q.4;
//-------------------------------------------------------------------------------------------------------------------- 
/* s^8 - 70*s^6 + 1187*s^4 + 1330*s^2 + 22201,                                                      cyc: [4, 2, 2, 2]               */rels_14 := {(a,d), (a,c)*b^2*(b,c), (b,d), (a,b)*(a,c)*b^2*c^2, (c,d), d^2};
/* s^8 - 154*s^6 + 9011*s^4 - 237314*s^2 + 2920681,                                                 cyc: [4, 2, 2, 2]               */rels_15 := {a^2*(a,b)*(a,c)*(a,d), (a,b)*(b,c), a^2*c^2, a^2*(a,b)*(a,c)*(c,d), (a,b)*(b,d)*d^2};
//--------------------------------------------------------------------------------------------------------------------
/* s^8 + 74*s^6 + 1429*s^4 + 7680*s^2 + 900,                                                        cyc: [4, 4, 2, 2]               */rels_16 := {b^2, (a,d)*(b,c), (c,d), (b,d)*d^2};
/* s^8 - 30*s^6 + 407*s^4 + 2730*s^2 + 8281,                                                        cyc: [4, 4, 2, 2]               */rels_17 := {(a,b), b^2*(b,c)*c^2, (a,c)*b^2*(b,c)*(c,d)};
/* s^8 - 26*s^6 + 577*s^4 + 156*s^2 + 41616,                                                        cyc: [4, 4, 2, 2]               */rels_18 := {(a,d)*b^2, (a,d)*(b,c), (b,d), (a,d)*(c,d), (a,b)*(a,d)*d^2};
/* s^8 - 66*s^6 + 1499*s^4 - 8070*s^2 + 42025,                                                      cyc: [4, 4, 2, 2]               */rels_19 := {(a,b)*b^2*(b,c), (a,b)*(b,d), (a,d)*b^2*(c,d), b^2*d^2};
/* s^8 - 2*s^7 - 41*s^6 - 2*s^5 + 1908*s^4 - 1864*s^3 + 631*s^2 - 1276*s + 841,                     cyc: [4, 4, 2, 2]               */rels_20 := {(a,c)*(a,d), (b,c)*(b,d), (a,c)*(b,c)*c^2, (c,d), (b,c)*d^2};
/* s^8 - 2*s^7 + 23*s^6 + 186*s^5 + 1208*s^4 - 372*s^3 + 5951*s^2 - 1820*s + 6685,                  cyc: [4, 4, 2, 2]               */rels_21 := {(a,b)*b^2, (a,b)*(b,c), (b,d), (a,b)*(c,d), (a,b)*(a,d)*d^2};
/* s^8 - 4*s^7 + 88*s^6 - 250*s^5 + 3261*s^4 - 6110*s^3 + 50842*s^2 - 47828*s + 442516,             cyc: [4, 4, 2, 2]               */rels_22 := {(a,b)*b^2, (b,c), (b,d), (c,d), (a,b)*(a,d)*d^2};
/* s^8 - 4*s^7 - 68*s^6 + 218*s^5 + 2553*s^4 - 5474*s^3 - 50576*s^2 + 53350*s + 493165,             cyc: [4, 4, 2, 2]               */rels_23 := {(b,c), (a,c)*(a,d)*(b,d), (a,c)*c^2, (c,d), (a,c)*d^2};
/* s^8 - 4*s^7 - 84*s^6 + 266*s^5 + 3497*s^4 - 7442*s^3 - 75944*s^2 + 79710*s + 757429,             cyc: [4, 4, 2, 2]               */rels_24 := {a^2*(a,b), (a,d), (a,c)*(b,d), (a,c)*d^2};
/* s^8 - 2*s^7 - 145*s^6 + 228*s^5 + 8648*s^4 - 8022*s^3 - 247957*s^2 + 83476*s + 2905009,          cyc: [4, 4, 2, 2]               */rels_25 := {(a,d), (a,b)*b^2, (a,b)*(b,c), (a,b)*(b,d)*(c,d), (a,b)*d^2};
/* s^8 - 4*s^7 - 180*s^6 + 554*s^5 + 13193*s^4 - 27314*s^3 - 462008*s^2 + 475758*s + 6504709,       cyc: [4, 4, 2, 2]               */rels_26 := {(a,b)*(a,d)*b^2, (a,d)*(b,c), (b,d), (a,d)*(c,d), d^2};
/* s^8 - 4*s^7 - 260*s^6 + 794*s^5 + 26553*s^4 - 54434*s^3 - 1258928*s^2 + 1286278*s + 23333389,    cyc: [4, 4, 2, 2]               */rels_27 := {(a,b), (a,d), b^2*(b,c), (b,d), b^2*(c,d), b^2*d^2};
//--------------------------------------------------------------------------------------------------------------------
/* s^8 + 54*s^6 + 617*s^4 + 2436*s^2 + 3136,                                                        cyc: [4, 4, 4, 2]               */rels_28 := {(c,d), (b,c), (a,c)*(a,d)*b^2, (a,b)*(a,c)*(a,d), (b,d)};
/* s^8 - 4*s^7 - 36*s^6 + 122*s^5 + 1241*s^4 - 2690*s^3 - 19424*s^2 + 20790*s + 213565,             cyc: [4, 4, 4, 2]               */rels_29 := {(a,c), (a,d), (b,c), (b,d), (c,d), d^2};
//--------------------------------------------------------------------------------------------------------------------
/* s^8 + 66*s^6 + 1037*s^4 + 3744*s^2 + 676,                                                        cyc: [8, 4, 2, 2]               */rels_30 := {(a,d), (b,c), (b,d), c^2, (c,d), (a,c)*d^2};
/* s^8 - 2*s^7 + 49*s^6 - 2*s^5 + 2043*s^4 - 1774*s^3 + 5446*s^2 + 3404*s + 5476,                   cyc: [8, 4, 2, 2]               */rels_31 := {(a,b), (a,c), b^2*(b,c), a^2*(a,d)*b^2*(b,d)};
/* s^8 - 4*s^7 + 4*s^6 + 2*s^5 + 681*s^4 - 1370*s^3 - 1364*s^2 + 2050*s + 116965,                   cyc: [8, 4, 2, 2]               */rels_32 := {(a,b)*(a,c), (a,b)*b^2, (b,c), (a,b)*(b,d), (a,b)*c^2, (a,b)*(c,d)};
/* s^8 - 4*s^7 - 4*s^6 + 26*s^5 - 636*s^4 + 1224*s^3 + 2553*s^2 - 3160*s + 236356,                  cyc: [8, 4, 2, 2]               */rels_33 := {(a,b)*(a,c), (a,b)*(a,d)*b^2, (b,c), (a,b)*(b,d), (a,b)*(a,d)*c^2, (a,b)*(c,d)};
/* s^8 - 2*s^7 + 35*s^6 - 272*s^5 + 2936*s^4 - 5090*s^3 + 29179*s^2 - 124236*s + 273849,            cyc: [8, 4, 2, 2]               */rels_34 := {(a,b)*(a,d)*b^2, (a,b)*(b,c), (b,d), (a,d)*(c,d), (a,b)*d^2};
/* s^8 - 2*s^7 + 259*s^6 - 392*s^5 + 25428*s^4 - 24574*s^3 + 1116631*s^2 - 488296*s + 18696421,     cyc: [8, 4, 2, 2]               */rels_35 := {(a,b)*(a,d)*b^2, (a,b)*(b,c), (b,d), (a,d)*(c,d), (a,d)*d^2};
/* s^8 - 2*s^7 - 359*s^6 + 544*s^5 + 49053*s^4 - 48592*s^3 - 3022196*s^2 + 1423424*s + 70902196,    cyc: [8, 4, 2, 2]               */rels_36 := {(a,b), (a,d), b^2, (b,d), (c,d)*d^2};
//--------------------------------------------------------------------------------------------------------------------
/* s^8 - 2*s^7 - 131*s^6 + 208*s^5 + 6993*s^4 - 6364*s^3 - 174884*s^2 + 51224*s + 1852036,          cyc: [8, 4, 4, 2]               */rels_37 := {(a,b), (a,d), (b,d), (a,c)*(c,d), d^2};
//--------------------------------------------------------------------------------------------------------------------
/* s^8 - 2*s^7 - 21*s^6 + 70*s^5 + 1544*s^4 - 8824*s^3 + 17155*s^2 - 13836*s + 8269,                cyc: [8, 8, 2, 2]               */rels_38 := {b^2, (a,b)*(a,d)*(b,d), (a,b)*(b,c)*(c,d), d^2};
//--------------------------------------------------------------------------------------------------------------------
/* s^8 + 6*s^6 + 587*s^4 + 7194*s^2 + 83521,                                                        cyc: [16, 4, 2, 2]              */rels_39 := {(b,c)*(b,d), c^2, (a,d)*(c,d), d^2};
/* s^8 - 14*s^6 + 277*s^4 + 3864*s^2 + 12996,                                                       cyc: [16, 4, 2, 2]              */rels_40 := {(a,b)*(a,d), (a,b)*b^2, (a,b)*(b,c), (b,d), (a,b)*(c,d), (a,b)*d^2};
/* s^8 + 26*s^6 + 877*s^4 + 14664*s^2 + 125316,                                                     cyc: [16, 4, 2, 2]              */rels_41 := {(a,b), b^2, (b,c), (b,d), (a,d)*(c,d), d^2};
/* s^8 - 2*s^7 - 15*s^6 + 178*s^5 + 1361*s^4 - 1390*s^3 + 3079*s^2 + 7614*s + 3574,                 cyc: [16, 4, 2, 2]              */rels_42 := {a^2, (a,c), (a,d), (a,b)*(b,c)*c^2, (a,b)*(b,c)*(c,d)};
//--------------------------------------------------------------------------------------------------------------------
/* s^8 - 70*s^6 + 1717*s^4 - 11760*s^2 + 60516,                                                     cyc: [20, 4, 2, 2]              */rels_43 := {(a,d)*(b,c), (a,d)*(b,d), (a,c)*(a,d)*c^2, (c,d), (a,d)*d^2};
/* s^8 - 98*s^6 + 3313*s^4 - 39228*s^2 + 207936,                                                    cyc: [20, 4, 2, 2]              */rels_44 := {(a,d), b^2, (a,b)*(b,c), (b,d), (c,d), (a,b)*d^2};
//--------------------------------------------------------------------------------------------------------------------
/* s^8 + 74*s^6 + 2797*s^4 + 58296*s^2 + 509796,                                                    cyc: [20, 4, 4, 2]              */rels_45 := {(a,b), b^2, (b,c), (b,d), (a,c)*(c,d)};
//--------------------------------------------------------------------------------------------------------------------
/* s^8 - 34*s^6 + 529*s^4 + 1380*s^2 + 14400,                                                       cyc: [40, 4, 2, 2]              */rels_46 := {(a,b)*(a,d), b^2, (b,d), (b,c)*(c,d), (a,b)*d^2};
/* s^8 + 10*s^6 + 397*s^4 + 7320*s^2 + 34596,                                                       cyc: [40, 4, 2, 2]              */rels_47 := {(a,b), b^2, (b,c), (b,d), (a,c)*c^2, (c,d)};
//--------------------------------------------------------------------------------------------------------------------
/* s^8 + 46*s^6 + 1369*s^4 + 24780*s^2 + 176400,                                                    cyc: [80, 4, 2, 2]              */rels_48 := {(a,c), (b,c), (a,d)*(b,d), c^2, (c,d), d^2};
//--------------------------------------------------------------------------------------------------------------------
Q_2_14 := quo< Q | rels_14 >;
Q_2_15 := quo< Q | rels_15 >;
Q_2_16 := quo< Q | rels_16 >;
Q_2_17 := quo< Q | rels_17 >;
Q_2_18 := quo< Q | rels_18 >;
Q_2_19 := quo< Q | rels_19 >;
Q_2_20 := quo< Q | rels_20 >;
Q_2_21 := quo< Q | rels_21 >;
Q_2_22 := quo< Q | rels_22 >;
Q_2_23 := quo< Q | rels_23 >;
Q_2_24 := quo< Q | rels_24 >;
Q_2_25 := quo< Q | rels_25 >;
Q_2_26 := quo< Q | rels_26 >;
Q_2_27 := quo< Q | rels_27 >;
Q_2_28 := quo< Q | rels_28 >;
Q_2_29 := quo< Q | rels_29 >;
Q_2_30 := quo< Q | rels_30 >;
Q_2_31 := quo< Q | rels_31 >;
Q_2_32 := quo< Q | rels_32 >;
Q_2_33 := quo< Q | rels_33 >;
Q_2_34 := quo< Q | rels_34 >;
Q_2_35 := quo< Q | rels_35 >;
Q_2_36 := quo< Q | rels_36 >;
Q_2_37 := quo< Q | rels_37 >;
Q_2_38 := quo< Q | rels_38 >;
Q_2_39 := quo< Q | rels_39 >;
Q_2_40 := quo< Q | rels_40 >;
Q_2_41 := quo< Q | rels_41 >;
Q_2_42 := quo< Q | rels_42 >;
Q_2_43 := quo< Q | rels_43 >;
Q_2_44 := quo< Q | rels_44 >;
Q_2_45 := quo< Q | rels_45 >;
Q_2_46 := quo< Q | rels_46 >;
Q_2_47 := quo< Q | rels_47 >;
Q_2_48 := quo< Q | rels_48 >;



F<g1,g2,g3,g4,g5> := FreeGroup(5); 
Q, fQ := pQuotient(F, 2, 2 : Print := 1);
a := Q.1;
b := Q.2;
c := Q.3;
d := Q.4;
e := Q.5;

/* s^8 - 26*s^6 + 379*s^4 + 2730*s^2 + 11025,                                                       cyc: [4, 4, 2, 2, 2]            */rels_49 := {a^2*(a,c)*(a,d), (a,b)*(a,c)*(b,c), (a,b)*(a,c)*b^2*(b,d), a^2*(a,e)*b^2*(b,e), a^2*(c,d), (a,c)*(a,e)*(c,e), (a,c)*(a,e)*b^2*(d,e), a^2*(a,c)*(a,e)*e^2};
//--------------------------------------------------------------------------------------------------------------------
/* s^8 + 66*s^6 + 2357*s^4 + 47304*s^2 + 401956,                                                    cyc: [8, 8, 2, 2, 2]            */rels_50 := {(a,d)*(b,c), (a,b)*(a,c)*(a,d)*(a,e)*(b,e), (a,c)*(a,d)*(a,e)*c^2, (a,d)*(a,e)*(c,d), (a,d)*(a,e)*(c,e), (a,b)*(a,c)*(a,d)*(b,d)*d^2, (a,d)*(a,e)*(d,e), (a,c)*e^2};
//--------------------------------------------------------------------------------------------------------------------
/* s^8 + 227*s^6 + 38533*s^4 + 2950092*s^2 + 168896016,                                             cyc: [20, 2, 2, 2, 2]           */rels_51 := {(a,d)*(a,e)*(b,d), (a,c)*b^2*(b,e), b^2*(b,c)*c^2, (a,b)*(a,c)*(b,c)*(c,d), (a,b)*(a,d)*(a,e)*b^2*(c,e), (a,b)*(a,e)*d^2*(d,e), (a,b)*(a,d)*(a,e)*b^2*(b,c)*d^2*e^2};
//--------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------

Q_2_49 := quo< Q | rels_49 >;
Q_2_50 := quo< Q | rels_50 >;
Q_2_51 := quo< Q | rels_51 >;

// List of Q_2 for deg 4 extensions
Q_2_index_4 := [Q_2_1, Q_2_2, Q_2_3, Q_2_4, Q_2_5, Q_2_6, Q_2_7, Q_2_8, Q_2_9, Q_2_10, Q_2_11, Q_2_12, Q_2_13, Q_2_14, Q_2_15, Q_2_16, Q_2_17, Q_2_18, Q_2_19, Q_2_20, Q_2_21, Q_2_22, Q_2_23, Q_2_24, Q_2_25, Q_2_26, Q_2_27, Q_2_28, Q_2_29, Q_2_30, Q_2_31, Q_2_32, Q_2_33, Q_2_34, Q_2_35, Q_2_36, Q_2_37, Q_2_38, Q_2_39, Q_2_40, Q_2_41, Q_2_42, Q_2_43, Q_2_44, Q_2_45, Q_2_46, Q_2_47, Q_2_48, Q_2_49, Q_2_50, Q_2_51];
#Q_2_index_4;
Ab_index_4 := [[2,4,4],[2,4,4],[2,4,8],[2,4,8],[2,4,8],[2,4,8],[2,4,8],[2,4,8],[2,4,8],[2,4,8],[4,4,8],[4,4,8],[4,4,8],[2,2,2,4],[2,2,2,4],[2,2,4,4],[2,2,4,4],[2,2,4,4],[2,2,4,4],[2,2,4,4],[2,2,4,4],[2,2,4,4],[2,2,4,4],[2,2,4,4],[2,2,4,4],[2,2,4,4],[2,2,4,4],[2,2,4,4],[2,2,4,4],[2,2,4,8],[2,2,4,8],[2,2,4,8],[2,2,4,8],[2,2,4,8],[2,2,4,8],[2,2,4,8],[2,2,4,8],[2,2,4,8],[2,2,4,16],[2,2,4,16],[2,2,4,16],[2,2,4,16],[2,2,4,16],[2,2,8,8],[2,4,4,4],[2,4,4,4],[2,4,4,4],[2,4,4,8], [2,2,2,2,4], [2,2,2,4,4], [2,2,2,8,8]];
#Ab_index_4;

PrintFileMagma("Ab_index_4", Ab_index_4 : Overwrite := true);

PrintFileMagma("Q_2_index_4", Q_2_index_4 : Overwrite := true);

Q_3_candidates := eval Read("Q_3_candidates");
Q_3_sorted := eval Read("Q_3_sorted");
Q_2_index_4 := eval Read("Q_2_index_4");
Ab_index_4 := eval Read("Ab_index_4");
Q_2_K := eval Read("Q_2_K");
Q_3_conj := eval Read("Q_3_conj");
quotients_49 := eval Read("quotients_49");
quotients_50 := eval Read("quotients_50");

qu, qum := pQuotient(Q_3_conj[1], 2, 2);
IsIsomorphic(Q_2_K, qu);


#Q_3_sorted;
Ab_index_4;
#Q_2_index_4[51];
AbelianQuotientInvariants(Q_2_index_4[51]);


for g in Q_2_index_4 do 
    if #g ne 256 then 
        AbelianQuotientInvariants(g);
        #g;
    end if;
end for;

p_subgroups := LowIndexSubgroups(Q_3_sorted[1], 4);
AbelianQuotientInvariants(p_subgroups[42]);

p_sub_8 := LowIndexSubgroups(p_subgroups[42], 2);
#p_sub_8;
for g in p_sub_8[2..32] do 
    //#g;
    AbelianQuotientInvariants(g);
end for;

Q_2_of_subgroups := [];
for g in p_subgroups do 
    if #g eq (#Q_3)/4 then
        qu, qum := pQuotient(g, 2, 2);
        Q_2_of_subgroups := Append(Q_2_of_subgroups, qu);
    end if;
end for;

for g in Q_2_of_subgroups do 
    if #g ne 256 then 
        AbelianQuotientInvariants(g);
        #g;
    end if;
end for;


// Create quotients:

sub_gps_all := Subgroups(Q_2_index_4[50] : OrderEqual:=2);

sub_gps := [];
for i in [1..#sub_gps_all] do 
    if sub_gps_all[i]`length eq 1 then 
        sub_gps := Append(sub_gps, sub_gps_all[i]`subgroup);
    end if;
end for;
#sub_gps;

Q_2_index_4[50] / sub_gps[2];

quotients_50 := [];
for g in sub_gps do 
    qu, qum := Q_2_index_4[50] / g;
    quotients_50 := Append(quotients_50, qu);
end for;


//-------------------------


norm_sub_gps := NormalSubgroups(Q_2_index_4[51]);

// 256  ------->    24 groups   
// 512  ------->    17 groups
// 1024 ------->    6  groups
// 2048 ------->    1  group
// 4096 ------->    2  groups
// 8192 ------->    1  group


// Compare with candidates that gives 
// 256  ------->  25 groups 
// 512  ------->  20 groups
// 1024 ------->  3  groups
// 2048 ------->  3  groups

//Hence we must have
// 24x256 --iso--> 24x256
// 1x512  --surj--> 1x256
// 16x512 --iso--> 16x512
// and most probably (but not certainly):
// 4x1024 --surj--> 4x512
// 2x1024 --iso--> 2x1024
// 1x2048 --surj--> 1x1024
// 2x4096 --surj--> 2x2048
// 1x8192 --surj--> 1x2048

// Check Q_1 data for perfect matching

r_2, fr_2 := pQuotient(Q_2_index_4[51], 2, 1);
r_2;

Q_3_sorted := eval Read("Q_3_sorted");

orders := [2^5, 2^6, 2^7, 2^8, 2^9, 2^(10), 2^(11), 2^(12), 2^(13)];
#orders;
 

l1 := [1,2];
l2 := [1,3];

// Sort by Ab_index_4

//Ab_index_4[51]
Q_3_sort_index_4 := [];

for i in [100..#Q_3_sorted] do 
    printf "%3o\n", i;
    p_subgroups := LowIndexSubgroups(Q_3_sorted[i], 4);
    for j in [17..#p_subgroups] do 
        ab := AbelianQuotientInvariants(p_subgroups[j]);
        if ab eq Ab_index_4[51] then 
            Q_3_sort_index_4 := Append(Q_3_sort_index_4, Q_3_sorted[i]);
            printf "Added candidate %3o\n", i;
            break;
        end if;
    end for;
end for;

Ab_index_4[51] eq [2,2,2,8,8];

PrintFileMagma("Q_3_sort_index_4", Q_3_sort_index_4 : Overwrite := true);

Q_3_sort_index_4 := eval Read("Q_3_sort_index_4");

#Q_3_sort_index_4;

Q_3_sort_index_4[1];

Q_3_sorted := eval Read("Q_3_sorted");
p_subgroups := LowIndexSubgroups(Q_3_sorted[1], 4);
ab_3 := [];
ab_4 := [];
ab_5 := [];
for j in [17..#p_subgroups] do 
    ab := AbelianQuotientInvariants(p_subgroups[j]);

    if #ab eq 3 then 
        ab_3 := Append(ab_3, ab);
    end if;
    if #ab eq 4 then 
        ab_4 := Append(ab_4, ab);
    end if;
    if #ab eq 5 then 
        ab_5 := Append(ab_5, ab);
    end if;
end for;
#ab_3;
#ab_4;
#ab_5;
Ab_list := ab_3 cat ab_4;
Ab_list := Ab_list cat ab_5;
Ab_list;

//Ab_index_4 all
Q_3_sort_4 := [];

Ab_index_4_short := [[2,4,4],[2,4,8],[4,4,8],[2,2,2,4],[2,2,4,4],[2,2,4,8],[2,2,4,16],[2,2,8,8],[2,4,4,4],[2,4,4,8], [2,2,2,2,4], [2,2,2,4,4], [2,2,2,8,8]];
Ab_index_4_nr := [2,8,3, 2,14,9,5,1,3,1, 1,1,1];

for i in [1..1] do 
    p_subgroups := LowIndexSubgroups(Q_3_sort_index_4[i], 4);
    Ab_nr := [0,0,0,0,0,0,0,0,0,0,0,0,0];
    for j in [17..#p_subgroups] do 
        ab := AbelianQuotientInvariants(p_subgroups[j]);
        for k in [1..#Ab_index_4_short] do
            if ab eq Ab_index_4_short[k] then 
                Ab_nr[k] := Ab_nr[k]+1;
            end if;
        end for;
    end for;
    printf "%o\n", Ab_nr;
end for;

PrintFileMagma("Q_3_sort_4", Q_3_sort_4 : Overwrite := true);

for i in [1022..1030] do 
    Q_3 := Q_3_sorted[i];
    p_subgroups := LowIndexSubgroups(Q_3, 4);
    ord_nr := [0,0,0,0,0,0,0,0,0];
    for g in p_subgroups do 
        if #g eq (#Q_3/4) then
            qu 
            qu, qum := pQuotient(g, 2, 2);
            for k in [1..#orders] do
                if #qu eq orders[k] then 
                    ord_nr[k] := ord_nr[k]+1;
                end if;
            end for;
        end if;
    end for;
    printf "%o\n", ord_nr;
end for;

function order(seq)
    prod := 1;
    for i in [1..#seq] do 
        prod := prod*seq[i];
    end for;
    return prod;
end function;

for i in [1022..1030] do 
    Q_3 := Q_3_sorted[i];
    p_subgroups := LowIndexSubgroups(Q_3, 4);
    ord_nr := [0,0,0,0,0,0,0,0,0];
    for g in p_subgroups do 
        if #g eq (#Q_3/4) then
            qu := AbelianQuotientInvariants(g);
            //qu, qum := pQuotient(g, 2, 2);
            for k in [1..#orders] do
                if order(qu) eq orders[k] then 
                    ord_nr[k] := ord_nr[k]+1;
                end if;
            end for;
        end if;
    end for;
    printf "%o\n", ord_nr;
end for;

Ab_ord_nr := [0,0,0,0,0,0,0,0,0];
for j in [1..#Ab_index_4] do 
    ord := order(Ab_index_4[j]);
    for k in [1..#orders] do
        if ord eq orders[k] then 
            Ab_ord_nr[k] := Ab_ord_nr[k]+1;
        end if;
    end for;
end for;
printf "%o\n", Ab_ord_nr;


// Sort on first 13 groups of order 256

Q_2_index_4_256 := [];

for g in Q_2_index_4 do 
    if #g eq 256 then 
        Q_2_index_4_256 := Append(Q_2_index_4_256, g); 
    end if;
end for;
#Q_2_index_4_256;

// 
Q_3_sorted_by_14_first := [];
for i in [1..#Q_3_sorted] do 
    printf "%3o\n", i;
    Q_3 := Q_3_sorted[i];
    p_subgroups := LowIndexSubgroups(Q_3, 4);
    Q_2_of_subgroups := [];
    // Create list of Q_2's
    printf "[ ";
    for g in p_subgroups do 
        if #g eq (#Q_3)/4 then
            qu, qum := pQuotient(g, 2, 2);
            Q_2_of_subgroups := Append(Q_2_of_subgroups, qu);
            printf "%3o, ", #qu;
        end if;
    end for;
    printf "]\n";
    
    // Check 13 first groups of order 256:
    check_tot := true;
    for j in [1..#Q_2_index_4_256] do
        //printf "j: %3o, L: %3o, ", j, #Q_2_of_subgroups;
        check := true;
        //printf "j: %3o\n", j;
        for k in [1..#Q_2_of_subgroups] do 
            //printf "k: %3o, L: %3o\n", k, #Q_2_of_subgroups;
            if IsIsomorphic(Q_2_index_4_256[j], Q_2_of_subgroups[k]) then 
                //printf "match: %3o, L:%3o\n", k, #Q_2_of_subgroups;
                Q_2_of_subgroups := Remove(Q_2_of_subgroups, k);
                //printf "k: %3o\n", k;
                check := false;
                break;
            end if;
        end for;
        if check then 
            check_tot := false;
            //printf "j: %3o\n", j;
            break;
        end if;
    end for;
    if check_tot then 
        Q_3_sorted_by_14_first := Append(Q_3_sorted_by_14_first, Q_3_sorted[i]);
        printf "Added index %3o\n", i;
    end if;
end for;
#Q_3_sorted_by_14_first;

Q_3_sorted_alt := Q_3_sorted_by_14_first;
#Q_3_sorted_alt;

for i in [1..100] do 
    if IsIsomorphic(Q_3_sorted[i], Q_3_sorted_alt[i]) then 
        printf "Iso\n";
    else 
        printf "Not\n";
    end if;

end for;

// Sort by group 11
Q_3_sorted_group_11 := [];
for i in [1..#Q_3_sorted] do 
    printf "%3o\n", i;
    Q_3 := Q_3_sorted[i];
    p_subgroups := LowIndexSubgroups(Q_3, 4);
    Q_2_of_subgroups := [];
    // Create list of Q_2's
    for l in [17..#p_subgroups] do 
        qu, qum := pQuotient(p_subgroups[l], 2, 2);
        Q_2_of_subgroups := Append(Q_2_of_subgroups, qu);
    end for;
    // Check if group 11 is there
    
    for k in [1..#Q_2_of_subgroups] do 
        if IsIsomorphic(Q_2_index_4[11], Q_2_of_subgroups[k]) then 
            printf "Added: %3o\n", i;
            Q_3_sorted_group_11 := Append(Q_3_sorted_group_11, Q_3_sorted[i]);
            break;
        end if;
    end for;
end for;
#Q_3_sorted_group_11;

// Check if conjectured candidates are in Q_3_sorted
// first at 2002
// second at 2031
for i in [2000..#Q_3_sorted] do 
    i;
    if IsIsomorphic(Q_3_sorted[i], Q_3_conj[1]) then 
        printf "first at %3o\n", i;
        break;
    end if;
end for;


// Check iso classes of groups of order 256 for Q_2_index_4

class_orders := [#Q_2_index_4[1]];
class_sizes := [1];
classes := [Q_2_index_4[1]];

for g in Q_2_index_4[2..51] do 
    not_exist := true;
    for i in [1..#classes] do 
        if IsIsomorphic(g, classes[i]) then 
            class_sizes[i] := class_sizes[i]+1;
            not_exist := false;
            break;
        end if;
    end for;
    if not_exist and #g eq 256 then 
        classes := Append(classes, g);
        class_sizes := Append(class_sizes, 1);
        class_orders := Append(class_orders, #g);
    end if;
end for;
class_orders;
class_sizes;

// > class_sizes;
// [ 8, 2, 3, 1, 4, 1, 2, 1, 2 ]

nr := 0;
for g in Q_2_index_4 do 
    if #g eq 256 then 
        nr := nr+1;
    end if;
end for;
nr;

// Check iso classes of groups of order 256

IsIsomorphic(Q_3_conj[1], Q_3_sorted[2002]); // --> true

Q_3 := Q_3_sorted[2002];
p_subgroups := LowIndexSubgroups(Q_3, 4);

for g in p_subgroups do 
    #g;
end for;

p_sub_2 := LowIndexSubgroups(Q_3, 2);

FPGroup(Q_3);
p_subgroups_fp := LowIndexSubgroups(FPGroup(Q_3), <4,4>);

Q_2_list := [];
for i in [1..#p_subgroups_fp] do 
    i;
    qu, qum := pQuotient(p_subgroups_fp[i], 2, 2); 
    Q_2_list := Append(Q_2_list, qu);
end for;


PCGroup(p_subgroups[1]);
p_subgroups[1];
#p_subgroups;


IsIsomorphic(p_subgroups[3], p_sub_2[3]);

for i in [1..#p_subgroups] do 
    if IsIsomorphic(p_subgroups[i], p_sub_2[6]) then
        i;
        break;
    end if;
end for;

Q_2_list := [];

for H in p_subgroups[17..67] do 
    Index(H, Q_3);
    qu, qum := pQuotient(H, 2, 2);
    Q_2_list := Append(Q_2_list, qu);
end for;
#Q_2_list;

class_orders := [#Q_2_list[1]];
class_sizes := [1];
classes := [Q_2_list[1]];

for g in Q_2_list[2..51] do 
    not_exist := true;
    for i in [1..#classes] do 
        if IsIsomorphic(g, classes[i]) then 
            class_sizes[i] := class_sizes[i]+1;
            not_exist := false;
            break;
        end if;
    end for;
    if not_exist and #g eq 256 then 
        classes := Append(classes, g);
        class_sizes := Append(class_sizes, 1);
        class_orders := Append(class_orders, #g);
    end if;
end for;
class_orders;
class_sizes;

//> class_sizes;
//[ 7, 3, 5, 4, 1, 2, 1, 2 ]